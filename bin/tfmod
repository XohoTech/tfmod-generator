#!/usr/bin/env ruby

require 'thor'
require 'tfmod/generator'

# Main class
class TfModuleGenerator < Thor::Group
  include Thor::Actions
  # Override namespace which defaults to classname 
  # http://www.rubydoc.info/github/erikhuda/thor/Thor%2FBase%2FClassMethods:namespace
  namespace :''
  argument :name

  def self.source_root
    File.dirname(__FILE__)
  end

  def create_readme_file
    template('../templates/Readme.md.erb', "#{name}/Readme.md")
  end

  def create_changelog_file
    template('../templates/CHANGELOG.md.erb', "#{name}/CHANGELOG.md")
  end

  def create_gitignore_file
    template('../templates/gitignore.erb', "#{name}/.gitignore")
  end

  def create_main_tf_file
    template('../templates/main.tf.erb', "#{name}/main.tf")
  end

  def create_outputs_tf_file
    template('../templates/outputs.tf.erb', "#{name}/outputs.tf")
  end

  def create_variables_tf_file
    template('../templates/variables.tf.erb', "#{name}/variables.tf")
  end

  def create_remote_scripts_dir
    empty_directory("#{name}/remote_scripts")
  end

  def create_user_data_file
    template('../templates/user-data.sh.erb', "#{name}/remote_scripts/user-data.sh.tpl")
  end

  def create_test_dir
    empty_directory("#{name}/test")
  end

  def git_init
    run("git init #{name}")
  end
  
  def create_module_done 
    puts "#{name} created!"
  end
end

TfModuleGenerator.start

#!/bin/bash

  # Example user-data bootstrap

  # User data script bootstrap takes variables from Terraform template provider 
  # Requires some parameters to be passed in via Terraform template variables.
  # Requires a working local consul agent that can connect to a consul cluster to join via Ec2 tags

  # userdata template variables passed in via Terraform
  # Environment: ${environment}
  # Domain: ${domain}
  # Team: ${team}
  # Service: ${service}
  # Product: ${product}
  # Count: ${<%= name %>_count}
  # Consul template version: ${consul_template_version}
  # Consul cluster AWS tag key: ${consul_server_tag_key}
  # Consul cluster AWS tag value: ${consul_server_tag_value}
  # Consul agent version: ${consul_agent_version}

  export IP_ADDRESS=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
  export REGION=$(curl -s 169.254.169.254/latest/meta-data/placement/availability-zone)
  export AWS_DEFAULT_REGION=$\{REGION::-1\}

  function set_hostname {
    echo "SETTING HOSTNAME ${service}${<%= name %>_count}-${team}-${product}-${environment}.${domain}"
    hostname ${service}${<%= name %>_count}-${team}-${product}-${environment}.${domain}
    echo "Updating /etc/hostname"
    echo "${service}${<%= name %>_count}-${team}-${product}-${environment}.${domain}" > /etc/hostname
    echo "Updating /etc/hosts"
    echo "127.0.0.1 ${service}${<%= name %>_count}-${team}-${product}-${environment}.${domain}" >> /etc/hosts
  }

  function install_awscli {
    apt-get update
    apt-get install -qq python-pip
    pip install awscli
  }

  function install_ssm_agent {
    curl https://amazon-ssm-us-west-2.s3.amazonaws.com/latest/debian_amd64/amazon-ssm-agent.deb \
      -o amazon-ssm-agent.deb
    dpkg -i amazon-ssm-agent.deb
    systemctl start amazon-ssm-agent
  }

  function install_consul {
    # Install consul agent function
    apt-get update
    apt-get install -qq curl unzip
    mkdir -p /var/lib/consul
    wget https://releases.hashicorp.com/consul/${consul_agent_version}/consul_${consul_agent_version}_linux_amd64.zip
    unzip consul_${consul_agent_version}_linux_amd64.zip -d /usr/local/bin
    rm consul_${consul_agent_version}_linux_amd64.zip
  }

  function install_consul_template {
    # Install consul template
    apt-get update
    apt-get install -qq curl unzip
    wget https://releases.hashicorp.com/consul-template/${consul_template_version}/consul-template_${consul_template_version}_linux_amd64.zip
    unzip consul-template_${consul_template_version}_linux_amd64.zip -d /usr/local/bin
    rm consul-template_${consul_template_version}_linux_amd64.zip
  }

function prep_consul_agent_service {
#Setup consul service
  cat > consul.service <<'CONSUL_AGENT_SYSTEMD'
[Unit]
Description=consul
Documentation=https://consul.io/docs/

[Service]
ExecStart=/usr/local/bin/consul agent \
  -advertise=ADVERTISE_ADDR \
  -bind=ADVERTISE_ADDR \
  -client=ADVERTISE_ADDR \
  -data-dir=/var/lib/consul \
  -config-dir=/etc/consul.d \
  -retry-join-ec2-tag-key=${consul_server_tag_key} \
  -retry-join-ec2-tag-value=${consul_server_tag_value} \
  -datacenter=${consul_datacenter}

ExecReload=/bin/kill -HUP $MAINPID
LimitNOFILE=65536
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
CONSUL_AGENT_SYSTEMD
  sed -i "s/ADVERTISE_ADDR/$\{IP_ADDRESS\}/" consul.service
  mv consul.service /etc/systemd/system/consul.service
  mkdir /etc/consul.d
}

function prep_dnsmasq {
  mkdir -p /etc/dnsmasq.d
  cat > /etc/dnsmasq.d/10-consul <<'DNSMASQ_CONFIG'
server=/consul/127.0.0.1#8600
DNSMASQ_CONFIG
}

function enable_services {
  /bin/systemctl enable consul
  /bin/systemctl enable dnsmasq
}

function start_services {
  /bin/systemctl start consul
  /bin/systemctl start dnsmasq
}

function main {
  set_hostname
  install_awscli
  install_ssm_agent
  install_consul
  install_consul_template

  prep_consul_agent_service
  prep_dnsmasq
  enable_services
  start_services
}

#Entry point
main
